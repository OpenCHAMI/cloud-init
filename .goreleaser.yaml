version: 2
project_name: cloud-init
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    - go install github.com/swaggo/swag/cmd/swag@latest
    - swag init -g cmd/cloud-init-server/main.go

builds:
  - id: linux
    main: ./cmd/cloud-init-server
    binary: cloud-init-server
    # export GIT_STATE=$(if git diff-index --quiet HEAD --; then echo 'clean'; else echo 'dirty'; fi)
    # export BUILD_HOST=$(hostname)
    # export GO_VERSION=$(go version | awk '{print $3}')
    # export BUILD_USER=$(whoami)
    ldflags:
      - "-X 'main.GitCommit={{.Commit}}' \
         -X 'main.BuildTime={{.Timestamp}}' \
         -X 'main.Version={{.Version}}' \
         -X 'main.GitBranch={{.Branch}}' \
         -X 'main.GitTag={{.Tag}}' \
         -X 'main.GitState={{ .Env.GIT_STATE }}' \
         -X 'main.BuildHost={{ .Env.BUILD_HOST }}' \
         -X 'main.GoVersion={{ .Env.GO_VERSION }}' \
         -X 'main.BuildUser={{ .Env.BUILD_USER }}'"
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    goamd64:
      - v3
      - v1
    env:
      - CGO_ENABLED=1
      - CC={{ if eq .Arch "arm64" }}aarch64-linux-gnu-gcc{{ else }}gcc{{ end }}
      - CXX={{ if eq .Arch "arm64" }}aarch64-linux-gnu-g++{{ else }}g++{{ end }}


dockers:
  - image_templates:
      - &amd64_linux_image ghcr.io/openchami/{{.ProjectName}}:{{ .Tag }}-amd64
      - ghcr.io/openchami/{{.ProjectName}}:{{ .Major }}-amd64
      - ghcr.io/openchami/{{.ProjectName}}:{{ .Major }}.{{ .Minor }}-amd64
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    goarch: amd64
    goamd64: v3

    extra_files:
      - LICENSE
      - CHANGELOG.md
      - README.md
  - image_templates:
      - &arm64v8_linux_image ghcr.io/openchami/{{.ProjectName}}:{{ .Tag }}-arm64
      - ghcr.io/openchami/{{.ProjectName}}:{{ .Major }}-arm64
      - ghcr.io/openchami/{{.ProjectName}}:{{ .Major }}.{{ .Minor }}-arm64
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    extra_files:
      - LICENSE
      - CHANGELOG.md
      - README.md
    goarch: arm64

docker_manifests:
  - name_template: "ghcr.io/openchami/{{.ProjectName}}:latest"
    image_templates:
      - *amd64_linux_image
      - *arm64v8_linux_image

  - name_template: "ghcr.io/openchami/{{.ProjectName}}:{{ .Tag }}"
    image_templates:
      - *amd64_linux_image
      - *arm64v8_linux_image

  - name_template: "ghcr.io/openchami/{{.ProjectName}}:{{ .Major }}"
    image_templates:
      - *amd64_linux_image
      - *arm64v8_linux_image

  - name_template: "ghcr.io/openchami/{{.ProjectName}}:{{ .Major }}.{{ .Minor }}"
    image_templates:
      - *amd64_linux_image
      - *arm64v8_linux_image

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
      {{- if .Amd64 }}{{ .Amd64 }}{{ end }}
    files:
      - LICENSE
      - CHANGELOG.md
      - README.md


checksum:
  name_template: 'checksums.txt'
snapshot:
  version_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'


# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://raw.githubusercontent.com/goreleaser/goreleaser/v2.11.2/www/docs/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
